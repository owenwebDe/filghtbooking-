version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: flightbooking
    volumes:
      - mongodb_data:/data/db
    networks:
      - flightbooking_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=${JWT_ACCESS_TOKEN_EXPIRE_MINUTES}
      - MONGODB_URL=mongodb://mongodb:27017
      - MONGODB_DATABASE=flightbooking
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - FRONTEND_URL=${FRONTEND_URL}
      - ADMIN_URL=${ADMIN_URL}
    volumes:
      - ./backend:/app
    depends_on:
      - mongodb
    networks:
      - flightbooking_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - flightbooking_network
    command: npm run dev

  admin-panel:
    build:
      context: ./admin-panel
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./admin-panel:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - flightbooking_network
    command: npm run dev

volumes:
  mongodb_data:

networks:
  flightbooking_network:
    driver: bridge